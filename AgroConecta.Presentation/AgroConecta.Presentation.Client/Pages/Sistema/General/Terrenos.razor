@page "/sistema/terrenos"
@using AgroConecta.Shared.DTO

<MudContainer Class="py-4 py-sm-8 py-md-12 py-lg-16 py-xl-20">
    <MudItem xs="12">
        <MudImage ObjectFit="ObjectFit.Cover" Src="https://dummyimage.com/1200x500" Alt="Örebro Slott" Class="rounded-lg" Height="256" Style="width: 100%" />
    </MudItem>
    <MudDivider Style="color: #ffffff; height: 20px;" />
    <MudItem xs="12">
        <MudGrid Class="mb-8">
            <MudItem xs="12" md="6">
                <MudText Typo="Typo.h2" Class="mud-typography-h4 mb-2">Pitchfork Kickstarter Taxidermy</MudText>
                <MudSkeleton Animation="Animation.False" SkeletonType="SkeletonType.Rectangle" Height="4px" Width="20%" Style="background-color: #ffffff;"/>
            </MudItem>
            <MudItem xs="12" md="6">
                <MudText Typo="Typo.body1">Whatever cardigan tote bag tumblr hexagon brooklyn asymmetrical gentrify, subway tile poke farm-to-table. Franzen you probably haven't heard of them man bun deep jianbing selfies heirloom prism food truck ugh squid celiac humblebrag.</MudText>
            </MudItem>
        </MudGrid>
    </MudItem>
    <MudItem xs="12" Class="mb-6">
        <MudText Class="pb-1" HtmlTag="label" for="input_busqueda" Style="@($"color:{Colors.Shades.Black};")">Buscar terrenos</MudText>
        <MudTextField Margin="Margin.Dense"
                      Class="flow-input"
                      InputId="input_busqueda"
                      Label=""
                      Variant="Variant.Outlined"
                      @bind-Value="SearchTerm"
                      Adornment="Adornment.Start"
                      AdornmentIcon="@Icons.Material.Filled.Search"
                      Immediate="true"/>
    </MudItem>
    <MudGrid>
        <MudItem xs="12">
            <MudGrid Class="mb-8">
                <!-- Tu contenido del encabezado -->
            </MudGrid>
        </MudItem>

        @foreach (var card in CurrentPageCards)
        {
            <MudItem xs="12" sm="6" md="3">
                <MudCard>
                    <MudCardMedia Image="@card.Image" Height="160"/>
                    <MudCardContent>
                        <MudText Typo="Typo.button" Class="mud-primary-text">@card.Subtitle</MudText>
                        <MudText Typo="Typo.h6" Class="mb-4">@card.Title</MudText>
                        <MudText Typo="Typo.body2">@card.Description</MudText>
                    </MudCardContent>
                </MudCard>
            </MudItem>
        }
    </MudGrid>

    <div class="d-flex justify-center my-6">
        <MudPagination Selected="@CurrentPage"
                       Count="@TotalPages"
                       BoundaryCount="2"/>
    </div>
</MudContainer>

@code {
    private int CurrentPage = 1;
    private int ItemsPerPage = 8; // Ajusta según necesidad

    // Datos de ejemplo
    private List<CardItem> Cards = new List<CardItem>
    {
        new CardItem("Chichen Itza", "Subtitle", "Fingerstache flexitarian...", "https://dummyimage.com/700x400/"),
        new CardItem("Azua", "Subtitle", "Fingerstache flexitarian...", "https://dummyimage.com/700x400/"),
        new CardItem("Bonao", "Subtitle", "Fingerstache flexitarian...", "https://dummyimage.com/700x400/"),
        new CardItem("San Juan", "Subtitle", "Fingerstache flexitarian...", "https://dummyimage.com/700x400/"),
        new CardItem("Colosseum Roma", "Subtitle", "Fingerstache flexitarian...", "https://dummyimage.com/700x400/"),
        new CardItem("Colosseum Roma", "Subtitle", "Fingerstache flexitarian...", "https://dummyimage.com/700x400/"),
        new CardItem("Colosseum Roma", "Subtitle", "Fingerstache flexitarian...", "https://dummyimage.com/700x400/"),
        new CardItem("Colosseum Roma", "Subtitle", "Fingerstache flexitarian...", "https://dummyimage.com/700x400/"),
        new CardItem("Colosseum Roma", "Subtitle", "Fingerstache flexitarian...", "https://dummyimage.com/700x400/"),
        new CardItem("Colosseum Roma", "Subtitle", "Fingerstache flexitarian...", "https://dummyimage.com/700x400/"),
        new CardItem("Colosseum Roma", "Subtitle", "Fingerstache flexitarian...", "https://dummyimage.com/700x400/"),
        new CardItem("Colosseum Roma", "Subtitle", "Fingerstache flexitarian...", "https://dummyimage.com/700x400/"),
        new CardItem("Colosseum Roma", "Subtitle", "Fingerstache flexitarian...", "https://dummyimage.com/700x400/"),
        new CardItem("Colosseum Roma", "Subtitle", "Fingerstache flexitarian...", "https://dummyimage.com/700x400/"),
        new CardItem("Colosseum Roma", "Subtitle", "Fingerstache flexitarian...", "https://dummyimage.com/700x400/"),
        new CardItem("Colosseum Roma", "Subtitle", "Fingerstache flexitarian...", "https://dummyimage.com/700x400/"),
        new CardItem("Colosseum Roma", "Subtitle", "Fingerstache flexitarian...", "https://dummyimage.com/700x400/"),
        new CardItem("Colosseum Roma", "Subtitle", "Fingerstache flexitarian...", "https://dummyimage.com/700x400/"),
        new CardItem("Colosseum Roma", "Subtitle", "Fingerstache flexitarian...", "https://dummyimage.com/700x400/"),
        new CardItem("Colosseum Roma", "Subtitle", "Fingerstache flexitarian...", "https://dummyimage.com/700x400/"),
        new CardItem("Colosseum Roma", "Subtitle", "Fingerstache flexitarian...", "https://dummyimage.com/700x400/"),
        new CardItem("Colosseum Roma", "Subtitle", "Fingerstache flexitarian...", "https://dummyimage.com/700x400/"),
        new CardItem("Colosseum Roma", "Subtitle", "Fingerstache flexitarian...", "https://dummyimage.com/700x400/"),
        new CardItem("Colosseum Roma", "Subtitle", "Fingerstache flexitarian...", "https://dummyimage.com/700x400/"),
        new CardItem("Colosseum Roma", "Subtitle", "Fingerstache flexitarian...", "https://dummyimage.com/700x400/"),
        new CardItem("Colosseum Roma", "Subtitle", "Fingerstache flexitarian...", "https://dummyimage.com/700x400/"),

        // Agrega todos tus items aquí...
    };

    // Lista paginada (modificada para usar la lista filtrada)
    private List<CardItem> CurrentPageCards => FilteredCards
        .Skip((CurrentPage - 1) * ItemsPerPage)
        .Take(ItemsPerPage)
        .ToList();
    // Total de páginas basado en la lista filtrada
    private int TotalPages => (int)Math.Ceiling((double)FilteredCards.Count / ItemsPerPage);
    public class CardItem
    {
        public string Title { get; set; }
        public string Subtitle { get; set; }
        public string Description { get; set; }
        public string Image { get; set; }

        public CardItem(string title, string subtitle, string description, string image)
        {
            Title = title;
            Subtitle = subtitle;
            Description = description;
            Image = image;
        }
    }
    private string _searchTerm = string.Empty;
    private string SearchTerm
    {
        get => _searchTerm;
        set
        {
            _searchTerm = value;
            CurrentPage = 1; // Resetear a primera página al buscar
        }
    }

    // Lista filtrada
    private List<CardItem> FilteredCards => Cards
        .Where(c => 
            c.Title.Contains(SearchTerm, StringComparison.OrdinalIgnoreCase) ||
            c.Subtitle.Contains(SearchTerm, StringComparison.OrdinalIgnoreCase) ||
            c.Description.Contains(SearchTerm, StringComparison.OrdinalIgnoreCase))
        .ToList();




        //Data dummy
    List<TerrenoDTO> terrenos = new List<TerrenoDTO>
    {
        new TerrenoDTO
        {
            PropietarioId = "propietario1",
            TipoMedidaAreaId = "hectarea",
            TipoSueloId = "Arcilloso",
            CoordenadaLatitud = 18.4861,
            CoordenadaLongitud = -69.9312,
            CantidadAreaSueloTotal = 50.0,
            CantidadAreaSueloDisponible = 20.0,
            Comentario = "Terreno fértil cerca del río.",
            Estado = 1
        },
        new TerrenoDTO
        {
            PropietarioId = "propietario2",
            TipoMedidaAreaId = "acre",
            TipoSueloId = "Arenoso",
            CoordenadaLatitud = 18.7357,
            CoordenadaLongitud = -70.1627,
            CantidadAreaSueloTotal = 75.0,
            CantidadAreaSueloDisponible = 50.0,
            Comentario = "Terreno arenoso ideal para ciertos cultivos.",
            Estado = 1
        },
        new TerrenoDTO
        {
            PropietarioId = "propietario3",
            TipoMedidaAreaId = "metro_cuadrado",
            TipoSueloId = "Franco",
            CoordenadaLatitud = 19.2236,
            CoordenadaLongitud = -70.5296,
            CantidadAreaSueloTotal = 10000.0,
            CantidadAreaSueloDisponible = 8000.0,
            Comentario = "Terreno franco con buen drenaje.",
            Estado = 1
        },
        new TerrenoDTO
        {
            PropietarioId = "propietario4",
            TipoMedidaAreaId = "hectarea",
            TipoSueloId = "Limoso",
            CoordenadaLatitud = 18.4719,
            CoordenadaLongitud = -69.8923,
            CantidadAreaSueloTotal = 120.0,
            CantidadAreaSueloDisponible = 60.0,
            Comentario = "Terreno limoso adecuado para arroz.",
            Estado = 1
        },
        new TerrenoDTO
        {
            PropietarioId = "propietario5",
            TipoMedidaAreaId = "acre",
            TipoSueloId = "Calcáreo",
            CoordenadaLatitud = 18.5075,
            CoordenadaLongitud = -69.8496,
            CantidadAreaSueloTotal = 200.0,
            CantidadAreaSueloDisponible = 150.0,
            Comentario = "Terreno calcáreo en zona montañosa.",
            Estado = 1
        }
    };
}

