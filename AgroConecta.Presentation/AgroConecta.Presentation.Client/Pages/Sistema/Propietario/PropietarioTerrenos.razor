@page "/sistema/propietario/terrenos"
@using AgroConecta.Shared.DTO
@inject ISnackbar Snackbar
@inject IDialogService DialogService
<MudContainer Class="py-4 py-sm-8 py-md-12 py-lg-16 py-xl-20">
    <MudItem xs="12">
        <MudImage ObjectFit="ObjectFit.Cover" Src="./images/dummy/dummy-terreno-11.jpg" Alt="Örebro Slott" Class="rounded-lg" Height="256" Style="width: 100%" />
    </MudItem>
    <MudDivider Style="color: #ffffff; height: 20px;" />
    <MudItem xs="12">
        <MudGrid Class="mb-8">
            <MudItem xs="12" md="6">
                <MudText Typo="Typo.h2" Class="mud-typography-h4 mb-2">
                    Mis terrenos
                </MudText>
                <MudSkeleton Animation="Animation.False" SkeletonType="SkeletonType.Rectangle" Height="4px" Width="20%" Style="background-color: #ffffff;" />
            </MudItem>
            <MudItem xs="12" md="6">
                <MudButton Variant="Variant.Filled"
                           Class="flow-button mb-2 "
                           Color="Color.Primary"
                           StartIcon="@Icons.Material.Filled.Add"
                           OnClick="OpenCreateDialog">Agregar terreno</MudButton>

                <MudText Typo="Typo.body1">
                    Estos son los diversos terrenos que tienes publicados en la plataforma para que los mismos puedan ser arrendados para realizar proyectos agrícolas
                </MudText>

            </MudItem>
        </MudGrid>
    </MudItem>
    <MudItem xs="12" Class="mb-6">
        <MudText Class="pb-1" HtmlTag="label" for="input_busqueda" Style="@($"color:{Colors.Shades.Black};")">Buscar terrenos</MudText>
        <MudTextField Margin="Margin.Dense"
                      Class="flow-input"
                      InputId="input_busqueda"
                      Label=""
                      Variant="Variant.Outlined"
                      @bind-Value="SearchTerm"
                      Adornment="Adornment.Start"
                      AdornmentIcon="@Icons.Material.Filled.Search"
                      Immediate="true"/>
    </MudItem>
    <MudGrid>
        <MudItem xs="12">
            <MudGrid Class="mb-8">
                <!-- Tu contenido del encabezado -->
            </MudGrid>
        </MudItem>

        @foreach (var card in CurrentPageCards)
        {
            <MudItem xs="12" sm="6" md="3">
                <MudCard>
                    <MudCardMedia Image="@card.Image" Height="160"/>
                    <MudCardContent Style="min-height: 250px;">
                        <div style="height: 48px; overflow: hidden;">
                            <MudText Typo="Typo.button" Class="mud-primary-text">@card.Subtitle</MudText>
                        </div>
                        <MudText Typo="Typo.h6" Class="mb-4">@card.Title</MudText>
                        <MudText Typo="Typo.body2">@card.Description</MudText>
                    </MudCardContent>
                </MudCard>
            </MudItem>
        }
    </MudGrid>

    <div class="d-flex justify-center my-6">
        <MudPagination @bind-Selected="CurrentPage"
                       Count="@TotalPages"
                       BoundaryCount="2"/>
    </div>
</MudContainer>

@code {
    private int CurrentPage = 1;
    private int ItemsPerPage = 8; // Ajusta según necesidad
    private bool _isLoadingData;

    private List<CardItem> Cards = new List<CardItem>
    {
        new CardItem("Azua", "Municipio de Azua de Compostela", "Terreno de 50 hectáreas ideal para el cultivo de mango, gracias a su clima seco y suelo fértil.", "./images/dummy/dummy-terreno-1.jpg"),
        new CardItem("La Vega", "Municipio de Constanza", "Parcela de 30 hectáreas perfecta para el cultivo de vegetales y fresas, debido a su clima templado.", "./images/dummy/dummy-terreno-2.jpg"),
        new CardItem("San Juan", "Municipio de San Juan de la Maguana", "Terreno de 75 hectáreas adecuado para el cultivo de habichuelas, con sistema de riego disponible.", "./images/dummy/dummy-terreno-3.jpg"),
        new CardItem("Santiago", "Municipio de Santiago de los Caballeros", "Finca de 40 hectáreas óptima para el cultivo de tabaco, en una zona con tradición tabacalera.", "./images/dummy/dummy-terreno-4.jpg"),
        new CardItem("Duarte", "Municipio de San Francisco de Macorís", "Terreno de 60 hectáreas ideal para el cultivo de cacao orgánico, en una región con alta pluviometría.", "./images/dummy/dummy-terreno-5.jpg"),
        new CardItem("Barahona", "Municipio de Santa Cruz de Barahona", "Parcela de 80 hectáreas perfecta para el cultivo de plátanos, con acceso a fuentes de agua.", "./images/dummy/dummy-terreno-6.jpg"),
        new CardItem("Monte Plata", "Municipio de Monte Plata", "Terreno de 55 hectáreas adecuado para el cultivo de piña, en una zona con suelos arenosos.", "./images/dummy/dummy-terreno-7.jpg"),
        new CardItem("Peravia", "Municipio de Baní", "Finca de 45 hectáreas óptima para el cultivo de tomate, con clima semiárido favorable.", "./images/dummy/dummy-terreno-8.jpg"),
        new CardItem("La Altagracia", "Municipio de Higüey", "Terreno de 70 hectáreas ideal para el cultivo de caña de azúcar, en una región con tradición azucarera.", "./images/dummy/dummy-terreno-9.jpg"),
        new CardItem("Puerto Plata", "Municipio de San Felipe de Puerto Plata", "Parcela de 35 hectáreas perfecta para el cultivo de café, en zonas montañosas con buena altitud.", "./images/dummy/dummy-terreno-10.jpg")
    };

    // Lista paginada (modificada para usar la lista filtrada)
    private List<CardItem> CurrentPageCards => FilteredCards
        .Skip((CurrentPage - 1) * ItemsPerPage)
        .Take(ItemsPerPage)
        .ToList();

    // Total de páginas basado en la lista filtrada
    private int TotalPages => (int)Math.Ceiling((double)FilteredCards.Count / ItemsPerPage);
    public class CardItem
    {
        public string Title { get; set; }
        public string Subtitle { get; set; }
        public string Description { get; set; }
        public string Image { get; set; }

        public CardItem(string title, string subtitle, string description, string image)
        {
            Title = title;
            Subtitle = subtitle;
            Description = description;
            Image = image;
        }
    }
    private string _searchTerm = string.Empty;
    private string SearchTerm
    {
        get => _searchTerm;
        set
        {
            _searchTerm = value;
            CurrentPage = 1; // Resetear a primera página al buscar
        }
    }

    // Lista filtrada
    private List<CardItem> FilteredCards => Cards
        .Where(c =>
            c.Title.Contains(SearchTerm, StringComparison.OrdinalIgnoreCase) ||
            c.Subtitle.Contains(SearchTerm, StringComparison.OrdinalIgnoreCase) ||
            c.Description.Contains(SearchTerm, StringComparison.OrdinalIgnoreCase))
        .ToList();


    #region Obtener terrenos
    protected override async Task OnInitializedAsync()
    {
        await GetAll();
    }

    private async Task GetAll()
    {
        _isLoadingData = true;
        //listaTiposMedidaArea = await TipoMedidaAreaAgent.GetAllAsync();
        _isLoadingData = false;
        StateHasChanged();
    }
    

    #endregion
    
    #region Agregar terreno

    private async Task OpenCreateDialog()
    {
        var result = await DialogService.Show<FrmTerreno>("Nuevo terreno", new DialogOptions {
            CloseButton = true,
            BackdropClick = false
        }).Result;
    
        if (!result.Canceled) await GetAll();
    }    

    #endregion
}

