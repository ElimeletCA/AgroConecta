@page "/sistema/seguridad/permisosrol/{rolId}"
@using System.Security.Claims
@using AgroConecta.Presentation.Client.Agents.Interfaces.Sistema.Seguridad
@using AgroConecta.Presentation.Client.Components.General.Alertas
@using AgroConecta.Presentation.Client.Helpers
@using AgroConecta.Shared.DTO
@using AgroConecta.Shared.Seguridad
@using AgroConecta.Shared.Seguridad.Mensajes
@inject HttpClient Http
@inject NavigationManager NavigationManager
@inject IUsuarioAgent UsuarioAgent
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject ISnackbar Snackbar
<style>
    .custom-table .mud-table-container {
        min-height: 0;
        max-height: 100%;
    }
</style>
<PageTitle>Administrar Permisos</PageTitle>

<MudText Typo="Typo.h5" Class="mb-4">
    <MudLink Href="/sistema/seguridad/roles/">
        <MudIcon Icon="@Icons.Material.Filled.ArrowBack" Color="Color.Tertiary"/>
    </MudLink>
    Administrar permisos para el rol @_permisosRol.NombreRol
</MudText>
<!-- Contenedor desplazable -->

<MudTable  Height="500px" Class="custom-table" Items="_permisosRol.FuncionesRol" Dense="true">
    <HeaderContent>
        <MudTh>Tipo</MudTh>
        <MudTh>Permiso</MudTh>
        <MudTh>Estatus</MudTh>
    </HeaderContent>
    <RowTemplate>
        <MudTd>@context.Tipo</MudTd>
        <MudTd>@FormatStrings.VisualizarPermiso(@context.Valor)</MudTd>
        <MudTd>
            <MudCheckBox @bind-Value="context.Asignada" />
        </MudTd>
    </RowTemplate>
</MudTable>

<br/>
<MudPaper Class="mt-4 d-flex flex-row-reverse flex-grow-1 gap-4" Elevation="0">
    <MudButton OnClick="Guardar"
               Class="flow-button"
               Variant="Variant.Filled"
               Color="Color.Primary">Guardar</MudButton>
</MudPaper>

<MessageBox @ref="_messageBox" />

@code {
    [Parameter] 
    public string rolId { get; set; }
    
    private RolDTO _rolActual = new();

    private PermisoDTO _permisosRol = new PermisoDTO();
    private MessageBox _messageBox;

    protected override async Task OnInitializedAsync()
    {
        await GetAllPermisos();
    }
    private async Task GetAllPermisos()
    {
        
        _permisosRol = await UsuarioAgent.GetAllPermisosByRolIdAsync(rolId);
        StateHasChanged();
    }

    private async Task Guardar()
    {
        var actualizacionCorrecta = await UsuarioAgent.UpdatePermisosAsync(_permisosRol);
        if (actualizacionCorrecta.success)
        {
            Snackbar.Add("Permisos modificados correctamente", Severity.Success);
            await GetAllPermisos();
        }
    }
}
