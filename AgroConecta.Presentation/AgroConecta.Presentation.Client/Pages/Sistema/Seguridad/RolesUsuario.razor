@page "/sistema/seguridad/rolesusuario/{UserId}"
@using System.Security.Claims
@using AgroConecta.Presentation.Client.Agents.Interfaces.Sistema.Seguridad
@using AgroConecta.Presentation.Client.Components.General.Alertas
@using AgroConecta.Shared.DTO
@using AgroConecta.Shared.Seguridad
@using AgroConecta.Shared.Seguridad.Mensajes
@inject HttpClient Http
@inject NavigationManager NavigationManager
@inject IUsuarioAgent UsuarioAgent
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject ISnackbar Snackbar

<PageTitle>Administrar Roles</PageTitle>

<MudText Typo="Typo.h5" Class="mb-4">
    <MudLink Href="/sistema/seguridad/usuarios/">
        <MudIcon Icon="@Icons.Material.Filled.ArrowBack" Color="Color.Tertiary"/>
    </MudLink>
    Administrar roles para @_usuarioActual.Email
</MudText>

<MudTable Items="_rolesUsuario.RolesUsuario" Dense="true">
    <HeaderContent>
        <MudTh>Rol</MudTh>
        <MudTh>Estatus</MudTh>
    </HeaderContent>
    <RowTemplate>
        <MudTd>@context.NombreRol</MudTd>
        <MudTd>
            <MudCheckBox @bind-Value="context.Asignado" />
        </MudTd>
    </RowTemplate>
</MudTable>
<br/>
<MudPaper Class="mt-4 d-flex flex-row-reverse flex-grow-1 gap-4" Elevation="0">
    <MudButton OnClick="Guardar"
               Class="flow-button"
               Variant="Variant.Filled"
               Color="Color.Primary">Guardar</MudButton>
</MudPaper>

<MessageBox @ref="_messageBox" />

@code {
    [Parameter] 
    public string UserId { get; set; }
    
    private UsuarioDTO _usuarioActual = new();

    private AdministrarRolesUsuarioDTO _rolesUsuario = new AdministrarRolesUsuarioDTO();
    private MessageBox _messageBox;

    protected override async Task OnInitializedAsync()
    {
        _usuarioActual = await UsuarioAgent.GetByIdAsync(UserId);
        await GetAllRoles();
    }
    private async Task GetAllRoles()
    {
        _rolesUsuario = await UsuarioAgent.GetAllRolesByIdAsync(UserId);
        StateHasChanged();
    }

    private async Task Guardar()
    {
        var actualizacionCorrecta = await UsuarioAgent.UpdateRolesById(UserId, _rolesUsuario);
        if (actualizacionCorrecta)
        {
            Snackbar.Add("Roles modificados correctamente", Severity.Success);
            await GetAllRoles();
        }
    }
}
