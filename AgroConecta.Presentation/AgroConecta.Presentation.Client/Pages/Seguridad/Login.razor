@using AgroConecta.Presentation.Client.Layout
@using AgroConecta.Shared.Security
@using Microsoft.AspNetCore.Components.Authorization
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject IJSRuntime JS
@inject HttpClient Http

@page "/Seguridad/Login"
@layout EmptyLayout



<PageTitle>Iniciar sesión - AgroConecta</PageTitle>


<br />
<MudText Class="pb-1" HtmlTag="label" for="txtEmail"  Color="Color.Dark" >Correo electronico</MudText>
<MudTextField Margin="Margin.Dense" Class="flow-input" InputId="txtEmail" @bind-Value="usuario.UserName" Label="" Variant="Variant.Outlined">  </MudTextField>

<MudText Class="pb-1" HtmlTag="label" for="txtPassword"  Color="Color.Dark" >Contraseña</MudText>
<MudTextField Margin="Margin.Dense" Class="flow-input" InputId="txtPassword" @bind-Value="usuario.pasword_without_hash" Label="" Variant="Variant.Outlined">  </MudTextField>

<br />
<MudButton Variant="Variant.Filled" @onclick=IniciarSesion Color="Color.Primary">Ingresar</MudButton>
No esta registrado?<MudLink Href="/Seguridad/Registro">Crear una cuenta</MudLink>

@code {
    string token = null;


    UsuarioDTO usuario = new UsuarioDTO();
    
    async Task IniciarSesion()
    {
        var resultado = await Http.PostAsJsonAsync("api/Auth/Login", usuario);
        
        
        token = await resultado.Content.ReadAsStringAsync();
        await JS.InvokeVoidAsync("localStorage.setItem", "Token", token);
        await AuthenticationStateProvider.GetAuthenticationStateAsync();
    }
}